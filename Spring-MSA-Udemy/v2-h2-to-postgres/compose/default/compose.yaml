services:
#  rabbit:
#    image: rabbitmq:3.13-management
#    hostname: rabbitmq
#    ports:
#      - "5672:5672"
#      - "15672:15672"
#    healthcheck:
#      test: rabbitmq-diagnostics check_port_connectivity
#      interval: 10s
#      timeout: 5s
#      retries: 10
#      start_period: 5s
#    extends:
#      file: common-config.yaml
#      service: network-deploy-service

  configserver:
    image: "jeongyun7521/configserver:s7"
    container_name: configserver-ms
    ports:
      - "8071:8071"
#    depends_on:
#      rabbit:
#        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8071/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 15s
    extends:
      file: common-config.yaml
      service: microservice-base-config

  
  cardsdb:
    container_name: cardsdb
    image: postgres:16.3-alpine3.19
    restart: always
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_USER: example
      POSTGRES_DB: cardsdb
      PGDATABASE: cardsdb
      PGUSER: example
    ports:
      - "5431:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready"]
      timeout: 30s
      retries: 10
      interval: 10s
      start_period: 10s
    extends:
      file: common-config.yaml
      service: network-deploy-service

  loansdb:
    container_name: loansdb
    image: postgres:16.3-alpine3.19
    restart: always
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_USER: example
      POSTGRES_DB: loansdb
      PGDATABASE: loansdb
      PGUSER: example
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready"]
      timeout: 30s
      retries: 10
      interval: 10s
      start_period: 10s
    extends:
      file: common-config.yaml
      service: network-deploy-service

  accounts:
    image: "jeongyun7521/accounts:s7"
    container_name: accounts-ms
    ports:
      - "8080:8080"
    depends_on:
      configserver:
        condition: service_healthy
      accountsdb:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: "accounts"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://accountsdb:5432/accountsdb"
    extends:
      file: common-config.yaml
      service: microservice-configserver-config

  cards:
    image: "jeongyun7521/cards:s7"
    container_name: cards-ms
    ports:
      - "9000:9000"
    depends_on:
      configserver:
        condition: service_healthy
      cardsdb:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: "cards"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://cardsdb:5432/cardsdb"
    extends:
      file: common-config.yaml
      service: microservice-configserver-config

  loans:
    image: "jeongyun7521/loans:s7"
    container_name: loans-ms
    ports:
      - "8090:8090"
    depends_on:
      configserver:
        condition: service_healthy
      loansdb:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: "loans"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://loansdb:5432/loansdb"
    extends:
      file: common-config.yaml
      service: microservice-configserver-config

networks:
  jeseo:
    driver: "bridge"