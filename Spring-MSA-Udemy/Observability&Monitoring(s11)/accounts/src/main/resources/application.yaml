server:
  port: 8080

spring:
  application:
    name: "accounts" # config server 에서 이 곳에 등록된 이름으로 찾아간다.
  profiles:
    active: "prod"
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: ''
  h2:
    console:
      enabled: true
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    show-sql: true

  config:
    import: "optional:configserver:http://localhost:8071" # optional: config 서버가 동작하지 않더라도 돌아갈 수 있도록 함
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true

logging:
  level:
    com:
      easybytes:
        accounts: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

endpoints:
  shutdown:
    enabled: true

eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

info:
  app:
    name: "accounts"
    description: "Jeseo's Accounts Application"
    version: "1.0.0"

resilience4j.circuitbreaker:
  configs:
    default:
      sliding-window-size: 10
      permitted-number-of-calls-in-half-open-state: 2
      failure-rate-threshold: 50
      wait-duration-in-open-state: 10000

resilience4j.retry:
  configs:
    default:
      max-attempts: 3
      wait-duration: 100
      enable-exponential-backoff: true
      exponential-backoff-multiplier: 2
      ignore-exceptions:
        - java.lang.NullPointerException
      retry-exceptions:
        - java.util.concurrent.TimeoutException

resilience4j.ratelimiter:
  configs:
    default:
      timeout-duration: 1000
      limit-refresh-period: 5000 # 5 millisecond 마다
      limit-for-period: 1 # 1개의 요청 허용